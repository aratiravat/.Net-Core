@model Quiz.Models.TBL_QUESTIONS

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>QuizStart</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <style>
        /* Custom CSS to center-align the form horizontally */
        .center-content {
            background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent white background */
            border-radius: 10px;
            padding: 50px;
            margin-top: 70px;
            margin-left: 350px;
            max-width: 400px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Use 'container' class for a fixed-width container -->
        <!-- Wrap content in a container and apply custom CSS class -->
        <div class="center-content">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group mt-3">
                    @Html.LabelFor(model => model.Q_TEXT, "Question", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mt-2">
                        @Html.DisplayFor(model => model.Q_TEXT, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Q_TEXT, "", new { @class = "text-danger" })
                    </div>
                </div>
                <p class="col-md-10 mt-4">Options</p>
                <div class="form-group mt-3">

                    <div class="col-md-10">
                        <span>A:   @Html.RadioButtonFor(model => model.OPA, new { htmlAttributes = new { @class = "form-control" } })  @Model.OPA </span>
                        @Html.ValidationMessageFor(model => model.OPA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3">

                    <div class="col-md-10">
                        <span>B:   @Html.RadioButtonFor(model => model.OPB, new { htmlAttributes = new { @class = "form-control" } })  @Model.OPB </span>
                        @Html.ValidationMessageFor(model => model.OPB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3">

                    <div class="col-md-10">
                        <span>C:  @Html.RadioButtonFor(model => model.OPC, new { htmlAttributes = new { @class = "form-control" } })  @Model.OPC </span>
                        @Html.ValidationMessageFor(model => model.OPC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3">

                    <div class="col-md-10">
                        <span>D:    @Html.RadioButtonFor(model => model.OPD, new { htmlAttributes = new { @class = "form-control" } })  @Model.OPD </span>
                        @Html.ValidationMessageFor(model => model.OPD, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 mt-4">
                        <input type="submit" value="Next" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            }
        </div> <!-- Close the center-content div -->
    </div> <!-- Close the container div -->

</body>
</html>
